#!/usr/bin/env bash

function _completion_lists(){
	# Remove existing lists and download new ones
	rm -Rf "$AMPATH"/{"$arch"-apps,list,libs-list} &&
	web_get "$APPSLISTDB" -P "$AMPATH" &&
	web_get "$LIBSLISTDB" -P "$AMPATH"

	# Extract and append program and library names to the list
	for file in "$arch"-apps libs-list; do
		if test -f "$AMPATH/$file"; then
			awk -v FS="(◆ | : )" '{print $2}' <"$AMPATH"/"$file" >> "$AMPATH"/list
		fi
	done

	# Append options to the list
	cat "$AMPATH"/options >> "$AMPATH"/list
}

function _sync_installation_scripts(){
	mkdir -p "$APPSPATH/$arg"/.am-installer
	if test -f "$APPSPATH/$arg"/.am-installer/"$arg"; then
		CURRENT=$(cat "$APPSPATH"/"$arg"/.am-installer/"$arg")
		SOURCE=$(web_get "$APPSDB"/"$arg" -O -)
		if [ "$CURRENT" == "$SOURCE" ]; then
			echo -ne "\r" 2> /dev/null
		else
			echo " ◆ Changed https://github.com/ivan-hc/AM/blob/main/programs/$arch/$arg"
		fi
	else
		if curl --output /dev/null --silent --head --fail "$APPSDB/$arg" 1>/dev/null; then
			echo " ◆ No installation script for $arg, downloading one..."
			mkdir -p "$APPSPATH/$arg"/.am-installer
			web_get "$APPSDB/$arg" -O "$APPSPATH/$arg"/.am-installer/"$arg"
		fi
	fi
}

function _sync_modules(){
	MODULES=$(curl -Ls "$HeaderAuthWithGITPAT" https://api.github.com/repos/ivan-hc/AM/contents/modules?ref="$AMBRANCH" | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -o 'https.*raw.*modules.*am$')
	for v in $MODULES; do
		cd "$AMPATH"/modules || return
		MODULENAME=$(echo "$v" | sed 's:.*/::')
		if ! test -f ./"$MODULENAME"; then
			echo " ◆ Downloading $MODULENAME (not previously installed)..."
			web_get "$v"
			chmod a+x ./"$MODULENAME"
		fi
		CURRENT=$(cat ./"$MODULENAME")
		SOURCE=$(web_get "$v" -O -)
		if [ "$CURRENT" == "$SOURCE" ]; then
			echo -ne "\r" 2> /dev/null
		else
			echo " ◆ Updating $MODULENAME..."
			mkdir tmp
			cd tmp || return
			web_get "$v"
			cd ..
			mv tmp/*.am ./
			chmod a+x ./*.am
			rmdir tmp
		fi
	done
}

function _sync_amcli(){
	echo '-----------------------------------------------------------------------------'
	_completion_lists
	CURRENT_AM_VERSION=$($AMCLIPATH -v)
	printf '\n ◆ SYNCHRONIZING %s VERSION %s...\r' "$(echo "$AMCLI" | tr a-z A-Z)" "$CURRENT_AM_VERSION"
	sleep 1
	rm -R -f "$AMPATH"/.cache/* 1>/dev/null; cd "$AMPATH"/.cache || return
	if [ "$AMCLI" == am ] 2>/dev/null; then
		web_get "$AMREPO"/APP-MANAGER && chmod a+x ./APP-MANAGER
		cd ..
		mv "$AMPATH"/.cache/APP-MANAGER "$AMPATH"; chmod 777 "$AMPATH"
	else
		web_get "$AMREPO"/APP-MANAGER -O appman && chmod a+x ./"$AMCLI"
		cd ..
		mv "$AMPATH"/.cache/"$AMCLI" "$AMCLIPATH"
	fi
	if [ ! "$CURRENT_AM_VERSION" == "$($AMCLIPATH -v)" ] ; then
		printf ' A new release of %s is available, please wait...\r' "$(echo "$AMCLI" | tr a-z A-Z)"
		printf ' ◆ %s IS NOW UPDATED TO THE BRAND NEW %s VERSION!           \n\n  Replacement of version %s currently in use, COMPLETED!' "$(echo "$AMCLI" | tr a-z A-Z)" "$($AMCLIPATH -v)" "$CURRENT_AM_VERSION"
		printf '\n See https://github.com/ivan-hc/AM/commits/main\n'
	else
		printf ' ◆ %s IS ALREADY UPDATED, CURRENT VERSION %s' "$(echo "$AMCLI" | tr a-z A-Z)" "$CURRENT_AM_VERSION"
		printf '\n See https://github.com/ivan-hc/AM/commits/%s\n' "$AMBRANCH"
	fi
}

echo '-----------------------------------------------------------------------------'
echo ' Checking for changes of the installation scripts in the online database...'
rm -R -f "$AMPATH"/.cache/sync-args && echo "" >> "$AMPATH"/.cache/sync-args
cd "$APPSPATH" && find -name 'AM-updater' -printf '%h\n' 2>/dev/null | sort -u | cut -c 3- > "$AMPATH"/.cache/sync-args
ARGS=$(cat "$AMPATH"/.cache/sync-args)

for arg in $ARGS; do
	_sync_installation_scripts
done

echo '-----------------------------------------------------------------------------'
echo ' Check for updates in modules...'

if [[ "$AMREPO" = *://* ]]; then
	_sync_modules
fi

if [[ "$AMREPO" = *://* ]]; then
	_sync_amcli
fi
