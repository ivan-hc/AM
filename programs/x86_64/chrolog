#!/bin/sh

APP=chrolog
REPO="Lukylix/Chrolog"

# CREATE THE FOLDER
mkdir /opt/$APP
cd /opt/$APP

# ADD THE REMOVER
echo '#!/bin/sh' >> /opt/$APP/remove
echo "rm -R -f /usr/share/applications/AM-$APP.desktop /opt/$APP /usr/local/bin/$APP" >> /opt/$APP/remove
chmod a+x /opt/$APP/remove

# DOWNLOAD THE ARCHIVE
mkdir tmp
cd ./tmp

version=$(curl -Ls https://api.github.com/repos/$REPO/releases | jq '.' | grep -w -v i386 | grep -w -v i686 | grep -w -v aarch64 | grep -w -v arm64 | grep -w -v armv7l | grep browser_download_url | grep -i linux.zip | cut -d '"' -f 4 | head -1)
wget $version
unzip -qq ./*.zip
echo "$version" >> /opt/$APP/version
cd ..
mv ./tmp/*/* ./
chmod a+x /opt/$APP/$APP
rm -R -f ./tmp

# LINK
ln -s /opt/$APP/$APP /usr/local/bin/$APP

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/usr/bin/env bash
APP=chrolog
REPO="Lukylix/Chrolog"
version0=$(cat /opt/$APP/version)
version=$(curl -Ls https://api.github.com/repos/$REPO/releases | jq '.' | grep -w -v i386 | grep -w -v i686 | grep -w -v aarch64 | grep -w -v arm64 | grep -w -v armv7l | grep browser_download_url | grep -i linux.zip | cut -d '"' -f 4 | head -1)
if [ $version = $version0 ]; then
  echo "Update not needed!"
else
  notify-send "A new version of $APP is available, please wait"
  mkdir /opt/$APP/tmp
  cd /opt/$APP/tmp
  wget $version
  unzip -qq ./*.zip
  if ls . | grep mage; then
	cd ..
  	if test -f ./tmp/*zip; then rm ./version
  	fi
  	echo $version >> ./version
  	mv --backup=t ./tmp/*/* ./
  	chmod a+x /opt/$APP/$APP
  	rm -R -f ./tmp ./*~
  fi
  notify-send "$APP is updated!"
fi
EOF
chmod a+x /opt/$APP/AM-updater

# LAUNCHER & ICON
cat >> /usr/share/applications/AM-$APP.desktop << 'EOF'
[Desktop Entry]
Version=1.0
Type=Application
Name=Chrolog
Comment=
Exec=chrolog
Icon=/opt/chrolog/icons/chrolog
Categories=Utility;
Terminal=true
StartupNotify=true
EOF

mkdir icons
mv ./resources/resources/*.svg ./icons/$APP




