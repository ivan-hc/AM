#!/bin/sh

# AM INSTALL SCRIPT VERSION 3.5
set -u
APP=genymotion
SITE="https://www.genymotion.com"

# CREATE DIRECTORIES AND ADD REMOVER
[ -n "$APP" ] && mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1
printf "#!/bin/sh\nset -e\n/opt/$APP/genymotion.bin -u -d /opt/$APP -y\nrm -f /usr/local/bin/$APP\nrm -R -f /opt/$APP" > ../remove
printf '\n%s' "rm -f /usr/local/share/applications/$APP-AM.desktop" >> ../remove
chmod a+x ../remove || exit 1

# DOWNLOAD AND PREPARE THE APP, $version is also used for updates
version=$(curl -Ls https://www.genymotion.com/product-desktop/download/ | tr '><" ' '\n' | grep -i "http.*linux.*bin$" | head -1)
wget "$version" -O /tmp/genymotion.bin || exit 1

# Move the downloaded file to the target directory and rename it
mv /tmp/genymotion.bin "/opt/$APP/genymotion.bin" || exit 1  # Move and rename the file
chmod a+x "/opt/$APP/genymotion.bin" || exit 1  # Apply execute permissions

# Execute the downloaded .bin file with sudo
if [ -x "/opt/$APP/genymotion.bin" ]; then
    sudo /opt/$APP/genymotion.bin -d /opt/$APP -y
else
    echo "Error: The downloaded file is not executable!"
    exit 1
fi

# Remove the .bin file after installation (skip this step to keep the .bin file)
# rm -f "/opt/$APP/genymotion.bin" || exit 1  # This line is skipped now

# Extract any archives if applicable
[ -e ./*7z ] && 7z x ./*7z && rm -f ./*7z
[ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
[ -e ./*zip ] && unzip -qq ./*zip 1>/dev/null && rm -f ./*zip

cd ..
if [ -d ./tmp ]; then
    mv ./tmp/* ./
else
    echo "Error: No files found in ./tmp"
    exit 1
fi
rm -R -f ./tmp || exit 1
echo "$version" > ./version

# Ensure executable permissions for the main app
chmod a+x ./$APP || exit 1

# LINK TO PATH
if [ ! -L "/usr/local/bin/$APP" ]; then
    ln -s "/opt/$APP/$APP" "/usr/local/bin/$APP"
else
    echo "Symlink already exists"
fi

# SCRIPT TO UPDATE THE PROGRAM
cat >> ./AM-updater << 'EOF'
#!/bin/sh
set -u
APP=genymotion
SITE="https://www.genymotion.com"
version0=$(cat "/opt/$APP/version")
version=$(curl -Ls https://www.genymotion.com/product-desktop/download/ | tr '><" ' '\n' | grep -i "http.*linux.*bin$" | head -1)
[ -n "$version" ] || { echo "Error getting link"; exit 1; }
if [ "$version" != "$version0" ]; then
    mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
    notify-send "A new version of $APP is available, please wait"
    wget "$version" -O /tmp/genymotion.bin || exit 1
    mv /tmp/genymotion.bin "/opt/$APP/genymotion.bin"
    chmod a+x "/opt/$APP/genymotion.bin" || exit 1
    sudo /opt/$APP/genymotion.bin -d /opt/ -y
    [ -e ./*7z ] && 7z x ./*7z && rm -f ./*7z
    [ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
    [ -e ./*zip ] && unzip -qq ./*zip 1>/dev/null && rm -f ./*zip
    cd ..
    if [ -d ./tmp ]; then
        mv --backup=t ./tmp/* ./"$APP" || mv --backup=t ./tmp/* ./
    else
        mv --backup=t ./tmp/* ./"$APP" 2>/dev/null || mv --backup=t ./tmp/* ./
    fi
    chmod a+x ./"$APP" || exit 1
    echo "$version" > ./version
    rm -R -f ./tmp ./*~
    notify-send "$APP is updated!"
else
    echo "Update not needed!"
fi
EOF
chmod a+x ./AM-updater || exit 1

# ICON
mkdir -p icons
wget https://www.genymotion.com/wp-content/uploads/2024/05/favicon_dark-150x150.png -O ./icons/"$APP" 2> /dev/null

# Ensure the correct executable path
EXEC_PATH=$(find "/opt/$APP" -type f -name "*.bin" -executable | head -n 1)

# Fallback to the main executable if no .bin file is found
if [ -z "$EXEC_PATH" ]; then
    EXEC_PATH="/opt/$APP/$APP"
fi

if [ ! -x "$EXEC_PATH" ]; then
    echo "Error: No executable (.bin or main app) found for $APP!"
    exit 1
fi
