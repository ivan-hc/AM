#!/bin/sh

# AM INSTALL SCRIPT VERSION 3.
set -u
APP=deadbeef
SITE1=$(curl -Ls https://deadbeef.sourceforge.io/download.html | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -i "https.*$APP.*x86_64.tar.bz2" | grep -vi devel | head -1)
SITE2=$(curl -Ls https://api.github.com/repos/Samueru-sama/DeaDBeef-AppImage/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -oi "https.*$APP.*appimage$" | grep -vi nightly | head -1)
SITE3=$(curl -Ls https://sourceforge.net/projects/deadbeef/files/travis/linux/master/ | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -i "https.*$APP.*x86_64.tar.bz2" | grep -i devel | head -1)
SITE4=$(curl -Ls https://api.github.com/repos/Samueru-sama/DeaDBeef-AppImage/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -oi "https.*$APP.*appimage$" | grep -i nightly | head -1)

# CREATE DIRECTORIES AND ADD REMOVER
[ -n "$APP" ] && mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1
printf "#!/bin/sh\nset -e\nrm -f /usr/local/bin/$APP\nrm -R -f /opt/$APP" > "/opt/$APP/remove"
printf '\n%s' "rm -f /usr/share/applications/AM-$APP.desktop" >> "/opt/$APP/remove"
chmod a+x "/opt/$APP/remove"

# CHOOSE A VERSION
read -r -p "
 Choose which version of DeaDBeeF to use:
 
 1. DeaDBeeF
	Official portable build of DeaDBeeF
	Source: https://deadbeef.sourceforge.io

 2. DeaDBeeF AppImage
	Unofficial AppImage of DeaDBeeF, has the advantace that it is one smaller file
	Can also be sandboxed with 'am --sandbox deadbeef' but that prevents DeaDBeeF from launching custom scripts
	Source: https://github.com/Samueru-sama/DeaDBeef-AppImage
 
 3. DeaDBeeF Nightly
	Official portable build of the development version of DeaDBeeF
	Source: https://deadbeef.sourceforge.io

 4. DeaDBeeF Nightly AppImage 
	Unofficial AppImage of the Nightly version of DeaDBeeF, has the advantace that it is one smaller file
	Can also be sandboxed with 'am --sandbox deadbeef' but that prevents DeaDBeeF from launching custom scripts
	Source: https://github.com/Samueru-sama/DeaDBeef-AppImage

 Which version you choose (type a number and press ENTER)?: " RESPONSE
case "$RESPONSE" in
	1) rm -f /opt/"$APP"/version
	UPDATER=1
	version="$SITE1"
	wget "$version" -O download.tar.bz2 || exit 1
	echo "$version" >> /opt/$APP/version;;

	2) rm -f /opt/"$APP"/version
	UPDATER=2
	version="$SITE2"
	wget "$version" || exit 1
	echo "$version" >> /opt/$APP/version;;

	3) rm -f /opt/"$APP"/version
	UPDATER=3
	version="$SITE3"
	wget "$version" -O download.tar.bz2 || exit 1
	echo "$version" >> /opt/$APP/version;;

	4) rm -f /opt/"$APP"/version
	UPDATER=4
	version="$SITE4"
	wget "$version" || exit 1
	echo "$version" >> /opt/$APP/version;;

	*) "/opt/$APP/remove" && echo "Not a valid number, aborting" && exit 1;;
esac

# PREPARE THE APP, $version is also used for updates
[ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
cd ..
if [ -d ./tmp/* ]; then mv ./tmp/*/* ./; else mv ./tmp/*mage ./"$APP"; fi
rm -R -f ./tmp || exit 1
echo "$version" > ./version
chmod a+x ./"$APP" || exit 1

# LINK TO PATH
ln -s "/opt/$APP/$APP" "/usr/local/bin/$APP"

# SCRIPT TO UPDATE THE PROGRAM
cat >> ./AM-updater << 'EOF'
#!/bin/sh
set -u
APP=deadbeef
#SITE1=$(curl -Ls https://deadbeef.sourceforge.io/download.html | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -i "https.*$APP.*x86_64.tar.bz2" | grep -vi devel | head -1)
#SITE2=$(curl -Ls https://api.github.com/repos/Samueru-sama/DeaDBeef-AppImage/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -oi "https.*$APP.*appimage$" | grep -vi nightly | head -1)
#SITE3=$(curl -Ls https://sourceforge.net/projects/deadbeef/files/travis/linux/master/ | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -i "https.*$APP.*x86_64.tar.bz2" | grep -i devel | head -1)
#SITE4=$(curl -Ls https://api.github.com/repos/Samueru-sama/DeaDBeef-AppImage/releases | sed 's/[()",{}]/ /g; s/ /\n/g' | grep -oi "https.*$APP.*appimage$" | grep -i nightly | head -1)
version0=$(cat "/opt/$APP/version")
version="REPLACETHIS"
[ -n "$version" ] || { echo "Error getting link"; exit 1; }
if [ "$version" != "$version0" ]; then
	mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
	notify-send "A new version of $APP is available, please wait"
	wget "$version" -O download.tar.bz2 || exit 1
	[ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
	cd ..
	if [ -d ./tmp/* ]; then mv --backup=t ./tmp/*/* ./; else mv --backup=t ./tmp/*mage ./"$APP"; fi
	chmod a+x ./"$APP" || exit 1
	echo "$version" > ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
else
	echo "Update not needed!"
fi
EOF
[ "$UPDATER" = 1 ] && { sed -i 's|REPLACETHIS|$SITE1|g; s|#SITE1|SITE1|g' ./AM-updater || exit 1; }
[ "$UPDATER" = 2 ] && { sed -i 's|REPLACETHIS|$SITE2|g; s|#SITE2|SITE2|; s|-O download.tar.bz2 ||g' ./AM-updater || exit 1; }
[ "$UPDATER" = 3 ] && { sed -i 's|REPLACETHIS|$SITE3|g; s|#SITE3|SITE3|g' ./AM-updater || exit 1; }
[ "$UPDATER" = 4 ] && { sed -i 's|REPLACETHIS|$SITE4|g; s|#SITE4|SITE4|g; s|-O download.tar.bz2 ||g' ./AM-updater || exit 1; }
chmod a+x ./AM-updater || exit 1

# LAUNCHER & ICON
if [ "$UPDATER" = "1" ] || [ "$UPDATER" = "3" ]; then
	DESKTOP="https://raw.githubusercontent.com/DeaDBeeF-Player/deadbeef/master/deadbeef.desktop.in"
	ICON="https://raw.githubusercontent.com/DeaDBeeF-Player/deadbeef/master/icons/scalable/deadbeef.svg"
	wget "$DESKTOP" -O ./"$APP".desktop 2>/dev/null && wget "$ICON" -O ./DirIcon 2>/dev/null
	sed -i "s#Exec=[^ ]*#Exec=$APP#g; s#Icon=.*#Icon=/opt/$APP/icons/$APP#g" ./"$APP".desktop
elif [ "$UPDATER" = "2" ] || [ "$UPDATER" = "4" ]; then
	./"$APP" --appimage-extract *.desktop 1>/dev/null && mv ./squashfs-root/*.desktop ./"$APP".desktop
	./"$APP" --appimage-extract .DirIcon 1>/dev/null && mv ./squashfs-root/.DirIcon ./DirIcon
	COUNT=0
	while [ "$COUNT" -lt 10 ]; do # Tries to get the actual icon/desktop if it is a symlink to another symlink
		if [ -L ./"$APP".desktop ]; then
			LINKPATH=$(readlink ./"$APP".desktop)
			./"$APP" --appimage-extract "$LINKPATH" && mv ./squashfs-root/"$LINKPATH" ./"$APP".desktop
		fi
		if [ -L ./DirIcon ]; then
			LINKPATH=$(readlink ./DirIcon)
			./"$APP" --appimage-extract "$LINKPATH" && mv ./squashfs-root/"$LINKPATH" ./DirIcon
		fi
		[ ! -L ./"$APP".desktop ] && [ ! -L ./DirIcon ] && break
		COUNT=$((COUNT + 1))
	done
	sed -i "s#Exec=[^ ]*#Exec=$APP#g; s#Icon=.*#Icon=/opt/$APP/icons/$APP#g" ./"$APP".desktop
	rm -R -f ./squashfs-root
else
mv ./"$APP".desktop /usr/share/applications/AM-"$APP".desktop && mv ./DirIcon ./icons/"$APP" 1>/dev/null
