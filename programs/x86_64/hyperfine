#!/bin/sh

APP=hyperfine
SITE="sharkdp/hyperfine"

# CREATE DIRECTORIES
if [ -z "$APP" ]; then exit 1; fi
mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1

# ADD THE REMOVER
echo "#!/bin/sh
rm -f /usr/share/applications/AM-$APP.desktop /usr/local/bin/$APP
rm -R -f /opt/$APP" >> "/opt/$APP/remove"
chmod a+x "/opt/$APP/remove"

# DOWNLOAD AND PREPARE THE APP
# $version is also used for updates

version=$(curl -Ls https://api.github.com/repos/sharkdp/hyperfine/releases | jq '.' | grep browser_download_url | grep -i x86_64-unknown-linux-gnu.tar.gz   | cut -d '"' -f 4 | head -1)
wget "$version"
echo "$version" >> "/opt/$APP/version"
tar fx ./*tar*; rm -R -f ./*tar*
cd ..
mv --backup=t ./tmp/*/"$APP" ./
rm -R -f ./tmp

# LINK
ln -s "/opt/$APP/$APP" "/usr/local/bin/$APP"

# SCRIPT TO UPDATE THE PROGRAM
cat >> /opt/$APP/AM-updater << 'EOF'
#!/bin/sh
APP=hyperfine
version0=$(cat /opt/$APP/version)
version=$(curl -Ls https://api.github.com/repos/sharkdp/hyperfine/releases | jq '.' | grep browser_download_url | grep -i x86_64-unknown-linux-gnu.tar.gz  | cut -d '"' -f 4 | head -1)
if [ $version = $version0 ]; then
	echo "Update not needed!"
else
	notify-send "A new version of $APP is available, please wait"
	mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
	wget $version
  tar fx ./*tar*; rm -R -f ./*tar*
	cd ..
  mv --backup=t ./tmp/*/"$APP" ./
	rm ./version
	echo "$version" >> ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
fi
EOF
chmod a+x "/opt/$APP/AM-updater"

