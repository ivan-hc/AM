#!/bin/sh

# AM INSTALL SCRIPT VERSION 3.5
set -u
APP=kitty
SUBAPP=kitten
SITE="kovidgoyal/kitty"

# CREATE DIRECTORIES AND ADD REMOVER
[ -n "$APP" ] && mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1
printf "#!/bin/sh\nset -e\nrm -f /usr/local/bin/$APP\nrm -f /usr/local/bin/$SUBAPP\nrm -R -f /opt/$APP" > ../remove
printf '\n%s' "rm -f /usr/local/share/applications/$APP-AM.desktop" >> ../remove
chmod a+x ../remove || exit 1

# DOWNLOAD AND PREPARE THE APP, $version is also used for updates
version=$(curl -Ls https://api.github.com/repos/kovidgoyal/kitty/releases/latest | sed 's/[()",{} ]/\n/g' | grep -oi "https.*.txz$" | grep -vi "i386\|i686\|aarch64\|arm64\|armv7l" | head -1)
wget "$version" || exit 1
[ -e ./*7z ] && 7z x ./*7z && rm -f ./*7z
[ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
[ -e ./*.txz ] && tar fx ./*.txz && rm -f ./*.txz
[ -e ./*zip ] && unzip -qq ./*zip 1>/dev/null && rm -f ./*zip
cd ..
if [ -d ./tmp/* 2>/dev/null ]; then mv ./tmp/*/* ./; else mv ./tmp/* ./"$APP" 2>/dev/null || mv ./tmp/* ./; fi
rm -R -f ./tmp || exit 1
echo "$version" > ./version
chmod a+x ./bin/"$APP" && chmod a+x ./bin/"$SUBAPP" || exit 1

# LINK TO PATH
ln -s "/opt/$APP/bin/$APP" "/usr/local/bin/$APP" && ln -s "/opt/$APP/bin/$SUBAPP" "/usr/local/bin/$SUBAPP"

# SCRIPT TO UPDATE THE PROGRAM
cat >> ./AM-updater << 'EOF'
#!/bin/sh
set -u
APP=kitty
SUBAPP=kitten
SITE="kovidgoyal/kitty"
version0=$(cat "/opt/$APP/version")
version=$(curl -Ls https://api.github.com/repos/kovidgoyal/kitty/releases/latest | sed 's/[()",{} ]/\n/g' | grep -oi "https.*.txz$" | grep -vi "i386\|i686\|aarch64\|arm64\|armv7l" | head -1)
[ -n "$version" ] || { echo "Error getting link"; exit 1; }
if [ "$version" != "$version0" ]; then
	mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
	notify-send "A new version of $APP is available, please wait"
	wget "$version" || exit 1
	[ -e ./*7z ] && 7z x ./*7z && rm -f ./*7z
	[ -e ./*tar.* ] && tar fx ./*tar.* && rm -f ./*tar.*
	[ -e ./*.txz ] && tar fx ./*.txz && rm -f ./*.txz
	[ -e ./*zip ] && unzip -qq ./*zip 1>/dev/null && rm -f ./*zip
	cd ..
	if [ -d ./tmp/* 2>/dev/null ]; then mv --backup=t ./tmp/*/* ./; else mv --backup=t ./tmp/* ./"$APP" 2>/dev/null || mv --backup=t ./tmp/* ./; fi
	chmod a+x ./bin/"$APP" && chmod a+x ./bin/"$SUBAPP" || exit 1
	echo "$version" > ./version
	rm -R -f ./tmp ./*~
	notify-send "$APP is updated!"
else
	echo "Update not needed!"
fi
EOF
chmod a+x ./AM-updater || exit 1

# ICON
mkdir -p icons
wget https://raw.githubusercontent.com/kovidgoyal/kitty/refs/heads/master/logo/kitty.png -O ./icons/"$APP" 2> /dev/null

# LAUNCHER
echo "[Desktop Entry]
Version=1.0
Type=Application
Name=kitty
GenericName=Terminal emulator
Comment=A fast, feature-rich, GPU-based terminal emulator
StartupWMClass=kitty-AM
TryExec=kitty
Exec=kitty --class kitty-AM
Icon=/opt/kitty/icons/kitty
Categories=System;TerminalEmulator;
X-TerminalArgExec=--
X-TerminalArgTitle=--title
X-TerminalArgAppId=--class
X-TerminalArgDir=--working-directory
X-TerminalArgHold=--hold" > /usr/local/share/applications/"$APP"-AM.desktop
