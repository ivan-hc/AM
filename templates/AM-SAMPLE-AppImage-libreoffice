#!/bin/sh

# AM INSTALL SCRIPT VERSION 3.5
set -u
APP=SAMPLE
SITE="REPLACETHIS"

# CREATE DIRECTORIES AND ADD REMOVER
[ -n "$APP" ] && mkdir -p "/opt/$APP/tmp" "/opt/$APP/icons" && cd "/opt/$APP/tmp" || exit 1
printf "#!/bin/sh\nset -e\nrm -f /usr/local/bin/$APP\nrm -R -f /opt/$APP" > ../remove
printf '\n%s' "rm -f /usr/local/share/applications/$APP-AM.desktop" >> ../remove
chmod a+x ../remove || exit 1

# DOWNLOAD AND PREPARE THE APP, $version is also used for updates
version=$(FUNCTION)
wget "$version" || exit 1
# Keep this space in sync with other installation scripts
# Use tar fx ./*tar* here for example in this line in case a compressed file is downloaded.
cd ..
mv ./tmp/*mage ./"$APP"
# Keep this space in sync with other installation scripts
rm -R -f ./tmp || exit 1
echo "$version" > ./version
chmod a+x ./"$APP" || exit 1

# LINK TO PATH
ln -s "/opt/$APP/$APP" "/usr/local/bin/$APP"

# SCRIPT TO UPDATE THE PROGRAM
cat >> ./AM-updater << 'EOF'
#!/bin/sh
set -u
APP=SAMPLE
SITE="REPLACETHIS"
version0=$(cat "/opt/$APP/version")
version=$(FUNCTION)
[ -n "$version" ] || { echo "Error getting link"; exit 1; }
if command -v appimageupdatetool >/dev/null 2>&1; then
	cd "/opt/$APP" || exit 1
	appimageupdatetool -Or ./"$APP" && chmod a+x ./"$APP" && echo "$version" > ./version && exit 0
fi
if [ "$version" != "$version0" ]; then
	mkdir "/opt/$APP/tmp" && cd "/opt/$APP/tmp" || exit 1
	notify-send "A new version of $APP is available, please wait"
	wget "$version" || exit 1
	# Use tar fx ./*tar* here for example in this line in case a compressed file is downloaded.
	cd ..
	mv --backup=t ./tmp/*mage ./"$APP"
	chmod a+x ./"$APP" || exit 1
	echo "$version" > ./version
	rm -R -f ./*zs-old ./*.part ./tmp ./*~
	notify-send "$APP is updated!"
else
	echo "Update not needed!"
fi
EOF
chmod a+x ./AM-updater || exit 1

# ICONS
cd "/opt/$APP" || exit 1
./libreoffice --appimage-extract usr/share/icons/hicolor/scalable/apps/*.svg && mv squashfs-root/usr/share/icons/hicolor/scalable/apps/*.svg ./icons 2>/dev/null
RELEASE=$(ls ./icons | head -1 | rev | cut -c 10- | rev)
mv ./icons/"$RELEASE"-base* ./icons/"$APP"-base 2>/dev/null
mv ./icons/"$RELEASE"-basic* ./icons/"$APP"-basic 2>/dev/null
mv ./icons/"$RELEASE"-calc* ./icons/"$APP"-calc 2>/dev/null
mv ./icons/"$RELEASE"-chart* ./icons/"$APP"-chart 2>/dev/null
mv ./icons/"$RELEASE"-draw* ./icons/"$APP"-draw 2>/dev/null
mv ./icons/"$RELEASE"-extension* ./icons/"$APP"-extension 2>/dev/null
mv ./icons/"$RELEASE"-impress* ./icons/"$APP"-impress 2>/dev/null
mv ./icons/"$RELEASE"-main* ./icons/"$APP"-main 2>/dev/null
mv ./icons/"$RELEASE"-math* ./icons/"$APP"-math 2>/dev/null
mv ./icons/"$RELEASE"-startcenter* ./icons/"$APP"-startcenter 2>/dev/null
mv ./icons/"$RELEASE"-writer* ./icons/"$APP"-writer 2>/dev/null

# LAUNCHERS
./libreoffice --appimage-extract opt/libreoffice*/share/xdg && mv squashfs-root/opt/libreoffice*/share/xdg ./ 2>/dev/null
cd ./xdg || exit 1
for f in *.desktop ; do mv "$f" "$APP-${f%.desktop}-AM.desktop"; done
sed -i "s# $(echo $RELEASE | cut -c 12-) # #g; s#Icon=$APP#Icon=/opt/$APP/icons/$APP#g; s#$RELEASE#$APP#g" *
sed -i '/Name=LibreOffice/c\Name=LibreOffice' ./*startcenter-AM.desktop
cd ..
mv ./xdg/* /usr/local/share/applications/ 2>/dev/null
rm -R -f ./squashfs-root ./xdg
